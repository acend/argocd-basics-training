name: Publish Main Version

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      -
        name: Set up npm for linting
        uses: actions/setup-node@v2
        with:
          node-version: '15.x'
      -
        name: Lint Markdown
        run: npm ci && npm run mdlint
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Quay.io Container Registry
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}
      -
        name: Build Acend Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            quay.io/acend/argocd-training:latest
      -
        name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          # changeme
          image-ref: 'quay.io/acend/argocd-training:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      -
        name: Build Puzzle Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=puzzle
          push: true
          tags: |
            quay.io/acend/argocd-training:latest-puzzle
      -
        name: Run vulnerability scanner Puzzle
        uses: aquasecurity/trivy-action@master
        with:
          # changeme
          image-ref: 'quay.io/acend/argocd-training:latest-puzzle'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      -
        name: 'Deploy Helm Release'
        uses: 'deliverybot/helm@v1'
        with:
          release: 'latest'
          namespace: 'acend-argocd-training-prod'
          version: '${{ github.sha }}'
          repository: 'https://acend.github.io/helm-charts/'
          chart: 'acend-training-chart'
          token: '${{ github.token }}'
          helm: 'helm3'
          value-files: |
            [
              "helm-chart/values.yaml"
            ]
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
      -
        name: Redeploy acend Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG_BASE64 }}
        with:
          args: rollout restart deployment/latest-argocd-training-acend --namespace acend-argocd-training-prod
      -
        name: Redeploy puzzle Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG_BASE64 }}
        with:
          args: rollout restart deployment/latest-argocd-training-puzzle --namespace acend-argocd-training-prod
